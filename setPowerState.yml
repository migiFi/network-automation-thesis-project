- name: Set the power state of the IP Power 9258 outlets
  hosts: ippower
  gather_facts: false
  # these can be passed in as extra vars on the cmdline
  # for example:
  #ansible-playbook -e '{
  #    "outlets":[{"outlet":"1","state":"0"},
  #               {"outlet":"2","state":"0"}]}' -i inventory ippower-setstate.yml 
  vars:
    outlets:
    - outlet: 1
      state: 1

    - outlet: 2
      state: 1

    # - outlet: 3
    #   state: 0

    # - outlet: 4
    #   state: 0
  tasks:
  - name: Set the state of the Outlets being changed
    uri:
      url: "http://{{ inventory_hostname }}/Set.cmd?CMD=SetPower+P6{{ item.outlet}}={{ item.state }}"
      user: "{{ ippower_user }}"
      password: "{{ ippower_pass }}"
      #return_content: yes
    #register: output
    delegate_to: localhost
    loop: "{{ outlets }}"
    loop_control:
      pause: 5

  - name: Get the state of the Outlets
    uri:
      url: "http://{{ inventory_hostname }}/Set.cmd?CMD=GetPower"
      user: "{{ ippower_user }}"
      password: "{{ ippower_pass }}"
      return_content: yes
    register: output
    delegate_to: localhost

  - name: Creating dictionary from the output
    set_fact:
      result: "{{ result | default({},true) | combine( { key: value } ) }}"
    loop: "{{ output.content.split(',') }}"
    loop_control:
      index_var: outlet_index
    vars:
      key: "port{{ outlet_index+1 }}"
      value: "{{item | regex_replace('(.*)=','') | replace('0','Off') | regex_search('Off') | default('On', true) }}"

  - name: Show the Final State of Outlets
    debug: var=result
